# Laravel backend with frontend build
FROM php:8.2-fpm

# Install Node.js and dependencies
RUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash - && \
    apt-get update && apt-get install -y \
    git curl libpng-dev libonig-dev libxml2-dev zip unzip libzip-dev nginx gettext-base \
    libpq-dev nodejs && \
    docker-php-ext-install pdo_pgsql pgsql mbstring exif pcntl bcmath gd zip && \
    rm -rf /var/lib/apt/lists/*

WORKDIR /var/www/html

# Install Composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Copy all app files
COPY . .

# Install Composer dependencies
RUN composer install --no-dev --optimize-autoloader --no-scripts

# Declare build arguments for Vite
ARG VITE_PUSHER_APP_ID
ARG VITE_PUSHER_APP_KEY
ARG VITE_PUSHER_APP_SECRET
ARG VITE_PUSHER_APP_CLUSTER=ap1
ARG VITE_APP_NAME

# Set them as environment variables for the build
ENV VITE_PUSHER_APP_ID=$VITE_PUSHER_APP_ID
ENV VITE_PUSHER_APP_KEY=$VITE_PUSHER_APP_KEY
ENV VITE_PUSHER_APP_SECRET=$VITE_PUSHER_APP_SECRET
ENV VITE_PUSHER_APP_CLUSTER=$VITE_PUSHER_APP_CLUSTER
ENV VITE_APP_NAME=$VITE_APP_NAME

# Install Yarn and build frontend (with build args)
RUN npm install -g yarn && \
    yarn install && \
    yarn build

# Remove node_modules to save space (optional but recommended)
RUN rm -rf node_modules

# Create storage directories and set permissions
RUN mkdir -p storage/logs \
    storage/framework/cache \
    storage/framework/sessions \
    storage/framework/views \
    bootstrap/cache && \
    chown -R www-data:www-data storage bootstrap/cache && \
    chmod -R 775 storage bootstrap/cache

# Remove default Nginx config and create new one
RUN rm -f /etc/nginx/sites-enabled/default && \
    rm -f /etc/nginx/sites-available/default

# Create Nginx configuration template
RUN echo 'server {\n\
    listen ${PORT};\n\
    listen [::]:${PORT};\n\
    server_name _;\n\
    root /var/www/html/public;\n\
    index index.php index.html;\n\
    \n\
    add_header X-Frame-Options "SAMEORIGIN";\n\
    add_header X-Content-Type-Options "nosniff";\n\
    \n\
    charset utf-8;\n\
    \n\
    # SPA fallback - send all requests to index.php\n\
    location / {\n\
    try_files $uri $uri/ /index.php?$query_string;\n\
    }\n\
    \n\
    location = /favicon.ico { access_log off; log_not_found off; }\n\
    location = /robots.txt  { access_log off; log_not_found off; }\n\
    \n\
    # Serve static assets directly\n\
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {\n\
    expires max;\n\
    log_not_found off;\n\
    access_log off;\n\
    try_files $uri =404;\n\
    }\n\
    \n\
    error_page 404 /index.php;\n\
    \n\
    location ~ \.php$ {\n\
    try_files $uri =404;\n\
    fastcgi_pass unix:/run/php/php8.2-fpm.sock;\n\
    fastcgi_index index.php;\n\
    fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;\n\
    fastcgi_param PATH_INFO $fastcgi_path_info;\n\
    include fastcgi_params;\n\
    }\n\
    \n\
    \n\
    location ~ /\.(?!well-known).* {\n\
    deny all;\n\
    }\n\
    }' > /etc/nginx/sites-available/laravel

# Copy and set entrypoint
COPY entrypoint.sh /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh

EXPOSE 8000 10000

ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]
